name: Release

on:
  workflow_dispatch:

jobs:
  deploy:
    permissions:
      contents: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: release
          token: '${{ secrets.GITHUB_TOKEN }}'

      - name: Extract branch or tag name
        id: ref
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF/refs\/tags\//};
            echo "VERSION=${VERSION#v}" >> $GITHUB_ENV
          else
            VERSION=${GITHUB_REF/refs\/heads\//}
            echo "VERSION=${VERSION#v}" >> $GITHUB_ENV
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.2
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Configure Git
        run: |
          git config --global user.name "newspy"
          git config --global user.email "newspy@youremail.com"

      - name: Bump version
        run: |
          poetry version ${{ env.VERSION }}

          git add pyproject.toml
          git commit -m "chore: bump version to ${{ env.VERSION }}"
          git push origin release

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Build and publish
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry publish --build
